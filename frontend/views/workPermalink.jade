//- Catalog web - page displaying a work
//- 
//- Copyright 2014 Commons Machinery http://commonsmachinery.se/
//- Distributed under an AGPL_v3 license, please see LICENSE in the top dir.

mixin workSourceItem(source, empty)
    - var source_work = source.source_work;
    article.entry(id="sources-#{empty || source_work.id}" class="grid-25 tablet-grid-33 mobile-grid-100")
        header
            h2: a.title(href="#{empty || source_work.href}") #{empty || source_work.alias || source_work.id}

            // button.remove -

        dl
            +defTerm('', 'Added By')
                a(href="#{empty || source.added_by.href}") #{empty || source.added_by.id}
            +defTerm('', 'Added on')
            +defTerm(null, 'URL')
                a(href="#{emty || source_work.href}") #{empty || source_work.href}

mixin workDetails()
    section
        - var displayTitle = work.alias || work.id
        header
            dl.hideCaption 
                +defTerm(null, 'Title')
                    h1 #{displayTitle}
            span(class="#{work.public ? 'public' : 'private'}")
            if work._perms.write
                span.actions
                    button.edit(data-action="edit") Edit Details
        span.embed #{work.media}
        span.description #{work.description}
        footer.details(class="grid-100 tablet-grid-100 mobile-grid-100")
            dl
                span.gravatar
                    img(src=gravatarHashURL(work.added_by.profile.gravatar_hash, 50))
                +defTerm(null, 'Added by')
                    a(href=work.added_by.id) #{work.added_by.id}
                +defTerm(null, 'on', 'added_at')
                    -var date = work.added_at.toDateString();
                    | #{date.substring(3, date.length)}
                +defTerm('--th time' , 'for the', 'forks')
                +defTerm('--' , 'from', 'media')
                +defTerm('-- collections', 'and currently part of', 'collections')

mixin workAnnotations()
    section
        header
            h1 Metadata
            if work._perms.write
                span.actions
                    button.edit(data-action="edit") Edit Metadata

        dl.metadata
            for i in work.annotations
                dt #{i.property.propertyName}
                dd #{i.property.value}

mixin workSources()
    section
        header
            h1 Sources
        ul
        for i in work.sources
            li
                +workSourceItem(i)

mixin workMedia()
    section
        header
            h1 Media
        ul
            for i in work.media
                li: a(href=i.href) #{i.id}

include includes/top
    div#work(class="prefix-5 grid-90 tablet-grid-100 mobile-grid-100")
        div#workDetails(class="grid-85 tablet-grid-80 mobile-grid-100")
            +workDetails
        div#workAnnotations(class="grid-85 tablet-grid-80 mobile-grid-100")
            +workAnnotations
        div#workSources(class="grid-85 tablet-grid-80 mobile-grid-100")
            +workSources
        div#workMedia(class="grid-85 tablet-grid-80 mobile-grid-100")
            +workMedia

        aside
            button.delete(data-action="delete") Delete Work



    include includes/bottom

    script#editWorkDetailsTemplate(type="text/template")
        form
            fieldset#fields
                span
                    label(for="input-alias") Alias:
                    input#input-alias(type="text")
                span
                    label(for="input-description") Description:
                    textarea#input-description(rows="3")
                span.public
                    label(for="input-public") Make it public
                    input#input-public(type="checkbox")
            fieldset.actions
                button.save(data-action="save") Save
                button.cancel(data-action="cancel") Cancel

    script#workDetailsTemplate(type="text/template")
        +workDetails()

    script.bootstrapData(type='application/json')
        != bootstrapData({ "data": work })
