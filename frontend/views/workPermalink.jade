//- Catalog web - page displaying a work
//- 
//- Copyright 2014 Commons Machinery http://commonsmachinery.se/
//- Distributed under an AGPL_v3 license, please see LICENSE in the top dir.

mixin workSourceItem(source, empty)
    - var source_work = source.source_work;
    article.entry(id="sources-#{empty || source_work.id}", class="grid-25 tablet-grid-33 mobile-grid-100"): article
    
        header
            h2: a.title(href="#{empty || source_work.href}") #{empty || source_work.alias || source_work.id}

            // button.remove -

        dl
            +defTerm('', 'Added By')
                a(href="#{empty || source.added_by.href}") #{empty || source.added_by.id}
            -var date = empty ? empty : work.added_at.toDateString();
            +defTerm(date.substring(3, date.length), 'Added on')
            +defTerm(null, 'URL')
                a(href="#{emty || source_work.href}") #{empty || source_work.href}

mixin workDetails()
    section
        - var displayTitle = work.alias || work.id
        header
            dl.hideCaption 
                +defTerm(null, 'Title')
                    h1 #{displayTitle}
            if work._perms.write
                span(class="#{work.public ? 'public' : 'private'}")
                span.actions
                    button.edit(data-action="edit") Edit Details
        span.embed #{'- no embed -'}
        span.description #{work.description}
        footer.details(class="grid-100 tablet-grid-100 mobile-grid-100")
            dl
                span.gravatar
                    img(src=gravatarHashURL(work.added_by.profile.gravatar_hash, 50))
                +defTerm(null, 'Added by')
                    a(href=work.added_by.id) #{work.added_by.id}
                +defTerm(null, 'on', 'added_at')
                    -var date = work.added_at.toDateString();
                    | #{date.substring(3, date.length)}
                +defTerm('--th time' , 'for the', 'forks')
                +defTerm('--' , 'from', 'media')
                +defTerm('-- collections', 'and currently part of', 'collections')

mixin workAnnotations(showEmpty)
    if showEmpty
        - var empty = [];
        - empty[0] = { propertyName: 'identifier', identifierLink: '-' }
        - empty[1] = {propertyName: 'title', titleLabel: '-', typeLabel: '-', typeLink: '-'}
        - empty[2] = { propertyName: 'language', languageLabel: '-', languageLink: '-' }
        - empty[3] = { propertyName: 'locator', locatorLink: '-' }
        - empty[4] = { propertyName: 'contributor', contributorLink: '-', contributorLabel: '-', roleLabel: '-', roleLink: '-'}
        - empty[5] = {propertyName: 'creator', creatorLink: '-', creatorLabel: '-', roleLabel: '-', roleLink: '-' }
        - empty[6] = {propertyName: 'MADate', date: '-', typeLabel: '-', typeLink: '-'}
        - empty[7] = {propertyName: 'location', latitude: '-', longitude: '-', altitude: '-', coordinateSystemLink: '-', coordinateSystemLabel: '-', locationLink: '-', locationLabel: '-'}
        - empty[8] = {propertyName: 'description', descriptionLabel: '-'}
        - empty[9] = {propertyName: 'keyword', keywordLabel: '-', keywordLink: '-'}
        - empty[10] = {propertyName: 'genre', genreLink: '-', genreLabel: '-'}
        - empty[11] = {propertyName: 'rating', ratingValue: '-', ratingSystemLink: '-', ratingSystemLabel: '-', maximum: '-', minimum: '-'}
        - empty[12] = {propertyName: 'relation', targetLink: '-', targetLabel: '', typeLabel: '-', typeLink: '-'}
        - empty[13] = {propertyName: 'collection', collectionLink: '-', collectionLabel: '-'}
        - empty[14] = {propertyName: 'copyright', copyrightLabel: '-', holderLink: '-', holderLabel: '-'}
        - empty[15] = {propertyName: 'policy', statementLink: '-', statementLabel: '-', typeLink: '-', typeLabel: '-'}
        - empty[16] = {propertyName: 'publisher', publisherLink: '-', publisherLabel: ''}
        - empty[17] = {propertyName: 'targetAudience', audienceLink: '-', audienceLabel: '-', classificationSystemLink: '-', classificationSystemLabel: '-'}
        - empty[18] = {propertyName: 'fragment', identifier: '-', roleLabel: '-', roleLink: '-'}
        - empty[19] = {propertyName: 'namedFragment', identifier: '-', label: '-'}
        - empty[20] = {propertyName: 'frameSize', width: '-', height: '-', unit: '-'}
        - empty[21] = {propertyName: 'compression', compressionLink: '-', compressionLabel: '-'}
        - empty[22] = {propertyName: 'duration', duration: '-'}
        - empty[23] = {propertyName: 'format', formatLink: '-', formatLabel: '-'}
        - empty[24] = {propertyName: 'samplingRate', samplingRate: '-'}
        - empty[25] = {propertyName: 'frameRate', frameEate: '-'}
        - empty[26] = {propertyName: 'averageBitRate', averageBitRate: '-'}
        - empty[27] = {propertyName: 'numTracks', number: '-', typeString: '-'}
        - empty[28] = {propertyName: 'metadataSource', sourceFormat: '-', metadataSource: '-'}

    - var fields = empty || _.pluck(work.annotations, 'property')

    section
        header
            h1 Metadata
        dl.metadata
             section
                header: h3 Identification Data

                - array = _.where(fields, {propertyName : 'identifier'})
                for i in array
                    +defTerm(null , 'Identifier')(data-bind="identifier")
                        a(href=i.identifierLink) #{i.identifierLink}

                - array = _.where(fields, {propertyName : 'title'})
                for i in array
                    +defTerm(null, 'Title')(data-bind='title')
                        if i.typeLink && i.typeLabel
                            a(href="#{empty || i.typeLink}") (#{i.typeLabel})
                        else if i.typeLabel
                            | (#{i.typeLabel})

                - array = _.where(fields, {propertyName : 'language'})
                for i in array
                    +defTerm(null, 'Language')(data-bind='language')
                            if i.languageLink
                                a(href="#{i.languageLink}") (#{i.languageLabel})
                            else
                                | (#{i.languageLabel})

                - array = _.where(fields, {propertyName : 'locator'})
                for i in array
                    +defTerm(null, 'Link')(data-bind='locator')
                        a(href="#{i.locatorLink}") #{i.locatorLink}

            section
                header: h3 Creation Data

                - array = _.where(fields, {propertyName : 'contributor'})
                for i in array
                    +defTerm(null, 'Contributor')(data-bind="contributor")
                        if i.contributorLink
                            a(href=i.contributorLink) #{i.contributorLabel}
                        else
                            | #{i.contributorLabel}
                        if i.roleLink && i.roleLabel
                            a(href=i.roleLink)  (#{i.roleLabel})
                        else if i.roleLabel
                            |  (#{i.roleLabel})

                - array = _.where(fields, {propertyName : 'creator'})
                for i in array
                    +defTerm(null, 'Creator')(data-bind="creator")
                        a(href=i.creatorLink) #{i.creatorLabel}
                        if i.roleLink
                            a(href=i.roleLink)  (#{i.roleLabel})
                        else
                            |  (#{i.roleLabel})

                - array = _.where(fields, {propertyName : 'MADate'})
                for i in array
                    - var caption
                        if i.typeLink && i.typeLabel
                            - caption = '<a href="'+ i.typeLink +'">'+ i.typeLabel +' date </a>'
                        else if i.typeLabel
                            - caption = i.typeLabel +'date'
                    +defTerm(i.date, caption)(data-bind="mdate")

                - array = _.where(fields, {propertyName : 'location'})
                for i in array
                    +defTerm(null, 'Location')(data-bind="location")
                        if i.locationLink
                            a(href=i.locationLink) #{i.locationLabel || ''} (#{i.latitude +','+ i.longitude +','+ i.altitude})
                        else
                            | #{i.locationLabel || ''} (#{i.latitude +','+ i.longitude +','+ i.altitude})
                        if i.coordinateSystemLink && i.coordinateSystemLabel
                            a(href=i.coordinateSystemLink)  (#{i.coordinateSystemLabel})
                        else if i.coordinateSystemLabel
                            |  #{i.coordinateSystemLabel}

                section
                    header: h3 Content Description Data

                    - array = _.where(fields, {propertyName : 'description'})
                    for i in array
                        +defTerm(i.descriptionLabel, 'Description')(data-bind='description')

                    - array = _.where(fields, {propertyName : 'keyword'})
                    for i in array
                        +defTerm(null, 'Tag')(data-bind='keyword')
                            if i.keywordLink
                                a(href=i.keywordLink) #{i.keywordLabel}
                            else
                                | #{i.keywordLabel}

                    - array = _.where(fields, {propertyName : 'genre'})
                    for i in array
                        +defTerm(null, 'Genre')(data-bind='genre')
                            if i.genreLink
                                a(href=i.genreLink) #{i.genreLabel}
                            else
                                | #{i.genreLabel}

                    - array = _.where(fields, {propertyName : 'rating'})
                    for i in array
                        +defTerm(null, 'Rating')(data-bind='rating')
                            | #{i.ratingValue}
                            if i.maximum && i.minimum
                                | / #{i.minimum +' - '+ i.maximum}
                            else if i.maximum
                                | / #{i.maximum}
                            if i.ratingSystemLink && i.ratingSystemLabel
                                a(href=i.ratingSystemLink)  (#{i.ratingSystemLabel})
                            else if i.ratingSystemLabel
                                |  (#{i.ratingSystemLabel})

                section
                    header: h3 Copyright Data

                    - array = _.where(fields, {propertyName : 'copyright'})
                    for i in array
                        +defTerm(null, 'Copyright')(data-bind='copyright')
                            pre #{i.copyrightLabel}
                            if i.holderLink
                                a(href=i.holderLink)  (#{i.holderLabel})
                            else
                                |  (#{i.holderLabel})

                    - array = _.where(fields, {propertyName: 'policy'})
                    for i in array
                        +defTerm(null, 'Policy')(data-bind='policy')
                            if i.statementLink
                                a(href=i.statementLink) #{i.statementLabel}
                            else
                                | #{i.statementLabel}
                            if i.typeLink && i.typeLabel
                                a(href=i.typeLink)  (#{i.typeLabel})
                            else if i.typeLabel
                                |  (#{i.typeLabel})

                section
                    header: h3 Relational Data

                    - array = _.where(fields, {propertyName : 'relation'})
                    for i in array
                        +defTerm(null, 'Relation')(data-bind='relation')
                            a(href=i.targetLink) #{i.targetLabel || i.targetLink}
                            if i.typeLink && i.typeLabel
                                a(href=i.typeLink)  (#{i.typeLabel})
                            else if i.typeLabel
                                |  (#{i.typeLabel})

                    - array = _.where(fields, {propertyName: 'collection'})
                    for i in array
                        +defTerm(null, 'Collection')(data-bind='collection')
                            if i.collectionLink
                                a(href=i.collectionLink) #{i.collectionLabel}
                            else
                                | #{i.collectionLabel}

                section
                    header: h3 Distribution Data

                    - array = _.where(fields, {propertyName : 'publisher'})
                    for i in array
                        +defTerm(null, 'Publisher')(data-bind='publisher')
                            if i.publisherLink
                                a(href=i.publisherLink) #{i.publisherLabel}
                            else
                                #{i.publisherLabel}

                    - array = _.where(fields, {propertyName : 'targetAudience'})
                    for i in array
                        +defTerm(null, 'Target audience')(data-bind='targetAudience')
                            if i.audienceLink
                                a(href=i.audienceLink) #{i.audienceLabel}
                            else
                                | #{i.audienceLabel}
                            if i.classificationSystemLink && i.classificationSystemLabel
                                a(href=i.classificationSystemLink)  (#{i.classificationSystemLink})
                            else if i.classificationSystemLabel
                                |  (#{href=i.classificationSystemLabel})

                section
                    header: h3 Fragments

                    - array = _.where(fields, {propertyName: 'fragment'})
                    for i in array
                        +defTerm(null, 'Fragment')(data-bind='fragment')
                            a(href=i.identifier) #{i.identifier}
                            if i.roleLink
                                a(href=i.roleLink)  (#{i.roleLabel})
                            else
                                |  (#{i.roleLabel})

                    - array = _.where(fields, {propertyName: 'namedFragment'})
                    for i in array
                        +defTerm(null, 'Named fragment')(data-bind='namedFragment')
                            a(href=i.identifier) #{i.label}

                section
                    header: h3 Technical Data

                    - array = _.where(fields, {propertyName: 'frameSize'})
                    for i in array
                        +defTerm(i.width + i.unit, 'Width')(data-bind:'width')
                        +defTerm(i.height + i.unit, 'Height')(data-bind:'height')

                    - array = _.where(fields, {propertyName: 'compression'})
                    for i in array
                        +defTerm(null, 'Compression')(data-bind='compression')
                            if i.compressionLink
                                a(href=i.compressionLink) #{i.compressionLabel}
                            else
                                | #{i.compressionLabel}

                    - array = _.where(fields, {propertyName: 'duration'})
                    for i in array
                        +defTerm(i.duration, 'Duration')(data-bind='duration')

                    - array = _.where(fields, {propertyName: 'format'})
                    for i in array
                        +defTerm(null, 'Format')(data-bind='format')
                            if i.formatLink
                                a(href=i.formatLink) #{i.formatLink}
                            else
                                | #{i.formatLinkg}

                    - array = _.where(fields, {propertyName: 'samplingRate'})
                    for i in array
                        +defTerm(i.samplingRate, 'Sample rate')(data-bind='samplingRate')

                    - array = _.where(fields, {propertyName: 'frameRate'})
                    for i in array
                        +defTerm(i.frameRate, 'Frame rate')(data-bind='frameRate')

                    - array = _.where(fields, {propertyName: 'averageBitRate'})
                    for i in array
                        +defTerm(i.averageBitRate, 'Avg bit rate')(data-bind='avgBitRate')

                    - array = _.where(fields, {propertyName: 'numTracks'})
                    for i in array
                        +defTerm(i.number, 'Tracks')(data-bind='tracks')
                            if i.typeString
                                |  (#{i.typeString})

                    - array = _.where(fields, {propertyName: 'metadataSource'})
                    for i in array
                        +defTerm(null, 'Sample Rate')(data-bind='metadataSource')
                            if i.metadataSource
                                a(href=i.metadataSource) #{i.sourceFormat || i.metadataSource}
                            else
                                | #{i.sourceFormat}


mixin workSources()
    section
        header
            h1 Sources
        div.entriesList
            for i in work.sources
                +workSourceItem(i)

mixin workMedia()
    section
        header
            h1 Media
        ul
            for i in work.media
                li: a(href=i.href) #{i.id}

include includes/top
    div#work(class="prefix-5 grid-90 tablet-grid-100 mobile-grid-100")
        div#workDetails(class="grid-85 tablet-grid-80 mobile-grid-100")
            +workDetails
        div#workAnnotations(class="grid-85 tablet-grid-80 mobile-grid-100")
            +workAnnotations
        div#workSources(class="grid-85 tablet-grid-80 mobile-grid-100")
            +workSources
        div#workMedia(class="grid-85 tablet-grid-80 mobile-grid-100")
            +workMedia

        aside
            button.delete(data-action="delete") Delete Work



    include includes/bottom

    script#editWorkDetailsTemplate(type="text/template")
        form
            fieldset#fields
                span
                    label(for="input-alias") Alias:
                    input#input-alias(type="text")
                span
                    label(for="input-description") Description:
                    textarea#input-description(rows="4", cols="24")
                span.public
                    label(for="input-public") Make it public
                    input#input-public(type="checkbox")
                    label.checkbox(for="input-public")
            fieldset.actions
                button.save(data-action="save") Save
                button.cancel(data-action="cancel") Cancel

    script#workDetailsTemplate(type="text/template")
        +workDetails()

    script.bootstrapData(type='application/json')
        != bootstrapData({ "data": work })
