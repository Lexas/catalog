//- Catalog web - page displaying a work
//- 
//- Copyright 2014 Commons Machinery http://commonsmachinery.se/
//- Distributed under an AGPL_v3 license, please see LICENSE in the top dir.

include includes/annotations

mixin workSourceItem(source, empty)
    - var source_work = source.source_work;
    article.entry(id="sources-#{empty || source_work.id}", class="grid-25 tablet-grid-33 mobile-grid-100"): article
    
        header
            h3: a(href="#{empty || source_work.href}", data-bind="source-title") #{empty || source_work.alias || source_work.id}

            //- button.remove -

        dl
            +defTerm('', 'Added By')(data-bind="source-added_by")
                a(href="#{empty || source.added_by.href}") #{empty || source.added_by.id}
            -var date = empty ? empty : work.added_at.toDateString();
            +defTerm(date.substring(3, date.length), 'Added on')(data-bind="source-added_at")
            +defTerm(null, 'URL')(data-bind="source-href")
                a(href="#{emty || source_work.href}") #{empty || source_work.href}

mixin workDetails()
    section
        header
            - var displayTitle = work.alias || work.id
            h1(data-bind="title") #{displayTitle}
            if work._perms.write
                span(class="#{work.public ? 'public' : 'private'}", data-bind="public")
                span.actions
                    button.edit(data-action="edit") Edit Details
        span(data-bind="oembed") #{'- no embed -'}
        span(data-bind="description") #{work.description}
        footer(class="grid-100 tablet-grid-100 mobile-grid-100")
            dl
                span.gravatar
                    img(src=gravatarHashURL(work.added_by.profile.gravatar_hash, 50))
                +defTerm(null, 'Added by')
                    a(href=work.added_by.id) #{work.added_by.id}
                +defTerm(null, 'on', 'added_at')
                    -var date = work.added_at.toDateString();
                    | #{date.substring(3, date.length)}
                +defTerm('--th time' , 'for the')(data-bind="forks")
                +defTerm('--' , 'from')(data-bind="media")
                +defTerm('-- collections', 'and currently part of')(data-bind="collections")

mixin workAnnotations(showEmpty)
    - var empty
    if showEmpty
        - empty = makeEmpty()

    - var fields = empty || _.pluck(work.annotations, 'property')

    section
        header
            h2 Metadata
        dl.metadata
            +printMetadata(fields)

mixin workSources()
    section
        header
            h2 Sources
        div.entriesList
            for i in work.sources
                +workSourceItem(i)

mixin workMedia()
    section
        header
            h2 Media
        ul
            for i in work.media
                li: a(href=i.href) #{i.id}

include includes/top
    div#work(class="prefix-5 grid-90 tablet-grid-100 mobile-grid-100")
        div#workDetails(class="grid-85 tablet-grid-80 mobile-grid-100")
            +workDetails
        if work.annotations.length
            div#workAnnotations(class="grid-85 tablet-grid-80 mobile-grid-100")
                +workAnnotations
        if work.sources.length
            div#workSources(class="grid-85 tablet-grid-80 mobile-grid-100")
                +workSources
        if work.media.length
            div#workMedia(class="grid-85 tablet-grid-80 mobile-grid-100")
                +workMedia

        aside
            button.delete(data-action="delete") Delete Work



    include includes/bottom

    script#editWorkDetailsTemplate(type="text/template")
        form
            fieldset#fields
                span
                    label(for="input-alias") Alias:
                    input#input-alias(type="text", tabindex="1", data-bind="alias")
                span
                    label(for="input-description") Description:
                    textarea#input-description(rows="4", cols="24", tabindex="1", data-bind="description")
                span.public
                    label(for="input-public") Make it public
                    input#input-public(type="checkbox", tabindex="1", data-bind="public")
                    label.checkbox(for="input-public")
            fieldset.actions
                button.save(tabindex="1", data-action="save") Save
                button.cancel(tabindex="1", data-action="cancel") Cancel

    script#workDetailsTemplate(type="text/template")
        +workDetails()

    script.bootstrapData(type='application/json')
        != bootstrapData({ "data": work })
